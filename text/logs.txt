Started by user Alejandro Espinosa
Running in Durability level: MAX_SURVIVABILITY
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/jenkins_home/workspace/jenkins-example
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (build)
[Pipeline] git
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/jenkins-example/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/HalbardHobby/bookie-flask.git # timeout=10
Fetching upstream changes from https://github.com/HalbardHobby/bookie-flask.git
 > git --version # timeout=10
 > git --version # 'git version 2.20.1'
 > git fetch --tags --force --progress -- https://github.com/HalbardHobby/bookie-flask.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
Checking out Revision 39e186c54b41dc735c99418bf160a310b78c85a8 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 39e186c54b41dc735c99418bf160a310b78c85a8 # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D master # timeout=10
 > git checkout -b master 39e186c54b41dc735c99418bf160a310b78c85a8 # timeout=10
Commit message: "ðŸ¤˜ Simple refactor"
 > git rev-list --no-walk 39e186c54b41dc735c99418bf160a310b78c85a8 # timeout=10
[Pipeline] script
[Pipeline] {
[Pipeline] isUnix
[Pipeline] sh
+ docker build -t halbard/bookie-flask .
Sending build context to Docker daemon  156.7kB

Step 1/8 : FROM python:3.8
 ---> b716d5a96fde
Step 2/8 : WORKDIR /usr/src/app
 ---> Using cache
 ---> bb84102c93db
Step 3/8 : COPY requirements.txt ./
 ---> Using cache
 ---> 24361c1355cf
Step 4/8 : RUN pip install --no-cache-dir -r requirements.txt
 ---> Using cache
 ---> 72f139ba018c
Step 5/8 : ENV FLASK_APP=/usr/src/app
 ---> Using cache
 ---> e708867fe364
Step 6/8 : ENV FLASK_ENV=development
 ---> Using cache
 ---> 28b1be1556f1
Step 7/8 : COPY app/ .
 ---> Using cache
 ---> 2b104c33dbbf
Step 8/8 : CMD ["flask", "run", "--host=0.0.0.0"]
 ---> Using cache
 ---> d90593629ff6
Successfully built d90593629ff6
Successfully tagged halbard/bookie-flask:latest
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (push to hub)
[Pipeline] script
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withDockerRegistry
$ docker login -u halbard -p ******** https://index.docker.io/v1/
WARNING! Using --password via the CLI is insecure. Use --password-stdin.
WARNING! Your password will be stored unencrypted in /var/jenkins_home/workspace/jenkins-example@tmp/7c71bc8b-c2e4-45c9-9bd9-de5a7afc6b45/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
[Pipeline] {
[Pipeline] sh
+ docker push halbard/bookie-flask:latest
The push refers to repository [docker.io/halbard/bookie-flask]
7784671ddc31: Preparing
1623e2f8df14: Preparing
0bc1f6dfc0eb: Preparing
439355e33986: Preparing
4bee83e267b5: Preparing
a29b259e81f9: Preparing
c75080a21a0a: Preparing
4b4c002ee6ca: Preparing
cdc9dae211b4: Preparing
7095af798ace: Preparing
fe6a4fdbedc0: Preparing
e4d0e810d54a: Preparing
4e006334a6fd: Preparing
4b4c002ee6ca: Waiting
a29b259e81f9: Waiting
c75080a21a0a: Waiting
cdc9dae211b4: Waiting
fe6a4fdbedc0: Waiting
7095af798ace: Waiting
4e006334a6fd: Waiting
7784671ddc31: Layer already exists
1623e2f8df14: Layer already exists
4bee83e267b5: Layer already exists
439355e33986: Layer already exists
0bc1f6dfc0eb: Layer already exists
a29b259e81f9: Layer already exists
4b4c002ee6ca: Layer already exists
cdc9dae211b4: Layer already exists
7095af798ace: Layer already exists
fe6a4fdbedc0: Layer already exists
e4d0e810d54a: Layer already exists
4e006334a6fd: Layer already exists
c75080a21a0a: Layer already exists
latest: digest: sha256:99214ed406f940c42681a8ceffb040bcf4b3ebe4db6bc5823b632dbfe971c179 size: 3051
[Pipeline] }
[Pipeline] // withDockerRegistry
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (clean up)
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ docker rmi halbard/bookie-flask
Untagged: halbard/bookie-flask:latest
Untagged: halbard/bookie-flask@sha256:99214ed406f940c42681a8ceffb040bcf4b3ebe4db6bc5823b632dbfe971c179
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS